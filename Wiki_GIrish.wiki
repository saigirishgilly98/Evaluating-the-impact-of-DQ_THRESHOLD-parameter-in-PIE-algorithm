- Day 1 : Created Github repository and Wiki.
- Day 2-5 : Read - RFC 8033 (Link: [(https://tools.ietf.org/html/rfc8033)])
                  Met Mohit Sir and clarified about the requirements of the assignment
                  Found values of dq_threshold set in Linux Kernel, ns-3,paper (PIE: A lightweight control scheme to address the bufferbloat problem) and RFC.
                  The dq_threshold values are :
                              Linux: 16384 bytes (Link - https://github.com/torvalds/linux/blob/master/include/net/pie.h)
                              Ns3: 10000 bytes (Link - http://code.nsnam.org/ns-3-dev/rev/2185118dab3b)
                              Paper: 10000 bytes (Link - https://ieeexplore.ieee.org/abstract/document/6602305)
                              RFC: 16384 bytes (Link - https://tools.ietf.org/html/rfc8033)

----------

        - Revised RFC 8033.
        - Read about flent.
        - Built a network topology consisting of server, client and router.
        - Ran ping and collected data at client side using flent.
        - Faced issues finding the way to alter dq_threshold parameter value, was only able to alter tupdate and target parameters.
        - Downloaded iproute2 package to work on q_pie.c file.
        - Tried to modify the value of DQ_THRESH in ns-3.29 present in pie-queue-disc.cc file in ns-3.29/src/traffic-control/model.
        - Added the latest linux kernel version (5.7.1) to proceed with altering the value of DQ_THRESH
        - Made appropriate changes to /include/net/pie.h and /net/sched/sch_pie.c files to include DQ_THRESH as a required parameter.
        - Generated the kernel object files for PIE
        - Faced issues in building the new kernel model and installing it
      

        - Resolved the issue by using a different system with an older Linux kernel

        - Made appropriate changes in the q_pie.c file in iproute2 package

        - Compiled and Installed the modified iproute2 package 
              
             https://packaging.ubuntu.com/html/packaging-new-software.html
             
        - Ran the following commands in the respective namespaces using the topology designed in Step 3

            Router(router) : sudo ip netns exec router sudo tc qdisc add dev eth1 root pie dq_thresh test_value
            test_value is the required parameter

            Server(red) : sudo ip netns exec red netserver &

            Client(green) : sudo ip netns exec green flent rrul -p totals --test-parameter bandwidth=800M --test-parameter upload_stream=num_cpus --test-parameter download_streams=num_cpus --test-parameter qdisc_stats_hosts=pg@192.168.20.2 --test-parameter qdisc_stats_interfaces=eth1 -l 60 -H 172.16.10.2 -t dq_thresh=test_value -o dq_thresh=test_value.png
            test_value is the required parameter
         - Got the corresponding graphs for each test_value provided

